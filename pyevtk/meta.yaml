{% set name = "pyevtk" %}
{% set version = "1.0.1" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "27ea532c0c17eef834d8c1a68da8b81be962c456ba1fd2b3e657a3ec5cc65c1c" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.8.0
  run:
    - python
    - numpy >=1.8.0

test:
  imports:
    - pyevtk

about:
  home: https://bitbucket.org/pauloh/pyevtk
  license: FreeBSD
  license_family: BSD
  license_file: ''
  summary: Export data as binary VTK files
  description: "[![Coverage Status](https://coveralls.io/repos/github/pyscience-projects/pyevtk/badge.svg?branch=master)](https://coveralls.io/github/pyscience-projects/pyevtk?branch=master)\n[![Build Status](https://travis-ci.org/pyscience-projects/pyevtk.png?branch=master)](https://travis-ci.org/pyscience-projects/pyevtk)\n\
    \nPREAMBLE:\n=========\n\nThis package in its entirety belongs to Paulo Herrera and its currently hosted under:\n\nhttps://bitbucket.org/pauloh/pyevtk\n\nI've misappropriated, well forked and repackaged\
    \ really, this package in order to host it on PyPI and allow for its easy distribution and installation as I use it a lot. I take no credit whatsoever for it.\n\nMy fork is hosted under:\n\nhttps://bitbucket.org/somada141/pyevtk\n\
    \nand while PyPI lists me as the author, despite my listing myself as the maintainer in the `setup.py` file, I'm merely the maintainer.\n\nINTRODUCTION:\n=============\n\nEVTK (Export VTK) package allows\
    \ exporting data to binary VTK files for\nvisualization and data analysis with any of the visualization packages that\nsupport VTK files, e.g.  Paraview, VisIt and Mayavi. EVTK does not depend on any\n\
    external library (e.g. VTK), so it is easy to install in different systems.\n\nSince version 0.9 the package is composed only of a set of pure Python files, hence\nit is straightforwrd to install and\
    \ run in any system where Python is installed.\nEVTK provides low and high level interfaces.  While the low level interface\ncan be used to export data that is stored in any type of container, the high\n\
    level functions make easy to export data stored in Numpy arrays.\n\nINSTALLATION:\n=============\n\nThis package is being hosted on PyPI under:\n\nhttps://pypi.python.org/pypi/PyEVTK\n\nand can be installed\
    \ with pip using `pip install pyevtk`\n\nDOCUMENTATION:\n==============\n\nThis file together with the included examples in the examples directory in the\nsource tree provide enough information to start\
    \ using the package.\n\nDESIGN GUIDELINES:\n==================\n\nThe design of the package considered the following objectives:\n\n1. Self-contained. The package does not require any external library\
    \ with\nthe exception of Numpy, which is becoming a standard package in many Python\ninstallations.\n\n2. Flexibility. It is possible to use EVTK to export data stored in any\ncontainer and in any of\
    \ the grid formats supported by VTK by using the low level\ninterface.\n\n3. Easy of use. The high level interface makes very easy to export data stored\nin Numpy arrays. The high level interface provides\
    \ functions to export most of\nthe grids supported by VTK: image data, rectilinear and structured grids. It\nalso includes a function to export point sets and associated data that can be\nused to export\
    \ results from particle and meshless numerical simulations.\n\n4. Performance. The aim of the package is to be used as a part of\npost-processing tools. Thus, good performance is important to handle\
    \ the results\nof large simulations.  However, latest versions give priority to ease of installation\nand use over performance.\n\nREQUIREMENTS:\n=============\n\n    - Numpy. Tested with Numpy 1.11.3.\n\
    \nThe package has been tested on:\n    - MacOSX 10.6 x86-64.\n    - Ubuntu 10.04 x86-64 guest running on VMWare Fusion.\n    - Ubuntu 12.04 x86-64 running Python Anaconda (3.4.3)\n    - Windows 7 x86-64\
    \ running Python Anaconda (3.4.3)\n\nIt is compatible with both Python 2.7 and Python 3.3. Since version 0.9 it is only compatible\nwith VTK 6.0 and newer versions.\n\nDEVELOPER NOTES:\n================\n\
    \nIt is useful to build and install the package to a temporary location without\ntouching the global python site-packages directory while developing. To do\nthis, while in the root directory, one can\
    \ type:\n\n    1. python setup.py build --debug install --prefix=./tmp\n    2. export PYTHONPATH=./tmp/lib/python2.6/site-packages/:$PYTHONPATH\n\nNOTE: you may have to change the Python version depending\
    \ of the installed\nversion on your system.\n\nTo test the package one can run some of the examples, e.g.:\n./tmp/lib/python2.6/site-packages/examples/points.py\n\nThat should create a points.vtu file\
    \ in the current directory.\n\nSUPPORT:\n=======\n\nI will continue releasing this package as open source, so it is free to be used in any kind of project. I will also continue providing support for\
    \ simple questions and making incremental improvements as time allows. However, I also  provide contract based support for commercial or research projects interested in this package or in topics related\
    \ to data analysis and scientific programming with Python, Java, MATLAB/Octave, C/C++ or Fortran. For further details, please contact me to: paulo.herrera.eirl@gmail.com."
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: 'xylar'
